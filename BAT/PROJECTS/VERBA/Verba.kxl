;=======================================================================================
; uses
;=======================================================================================

   ;----------------------------------------------------------
   $Debug = 1
   ;----------------------------------------------------------
   $Secret_key_path = "a:\"
   $Pub_key_path = "c:\keys\verba"
   $Pub_key_path = "K:\keys\verba"
   $D_APP = "K:\TOOLS\APP\VERBA"
   $APP = "wftesto.exe"
   $APP2 = "sprlist.exe"

;-------------------------------------------------
; Display_Error
;-------------------------------------------------
function Display_Error($Error)
;begin
   select
      case $ERROR =  0 LogAdd($Log, $LogFile, "I", "00 Нет ошибок")
      case 1
         LogAdd($Log, $LogFile, "I", $ERROR+" неопределенная ошибка")
   endselect
EndFunction

;-------------------------------------------------
; RUN_Verba($APP)
;-------------------------------------------------
;  USAGE: wftesto.exe command [arguments] 
;  where command [arguments] are:
;     e In_file Out_file Secret_key_path Pub_key_path From[series] To ...
;     d In_file Out_file Secret_key_path Pub_key_path From 
;     g In_file 
;     s In_file Out_file Secret_key_path From
;     v In_file Pub_key_path 
;     u In_file [count_to_del]
;     i [Key_ID] [Key_Dev]
;     r Key_ID 
;     l 
;  comands:
;     e - encrypt file,
;     d - decrypt file,
;     g - get list of abonents of encrypted file,
;     s - make signature,
;     v - verify signature,
;     u - delete signature
;     i - init key(load in to driver),
;     r - reset key(unload...),
;     l - get keys list.
;
;  EXAMPLES:
;
;  wftesto.exe e file.txt file.cry a:\ c:\pub 0001 0003 0004
;     (encrypt from abonent 0001 to abonents 0003 and 0004 in current series)
;
;  wftesto.exe e file.txt file.cry c:\key\ c:\pub 0005999999 0006 0007
;     (encrypt from abonent 0005 to abonents 0006 and 0007 in series 999999)
;  
;  wftesto.exe s file.txt file.sig a:\ 000122222201
;     (sign from abonent 000122222201)
;  
;  wftesto.exe i 0005666666
;     (load crypt keys from key_diskette)
;
;  wftesto.exe i 000566666601
;     (load sign keys from key_diskette)
;
;  wftesto.exe i 
;     (load all exists keys from key_diskette)
;-------------------------------------------------

function RUN_Verba($A_APP)
;begin
   ; cd $D_APP
   $Program = $D_APP+"\"+$A_APP
   if $Command
      $Program = $Program+" "+$Command
   endif
   if $P1 $Program = $Program+" "+$P1 endif
   if $P2 $Program = $Program+" "+$P2 endif
   if $P3 $Program = $Program+" "+$P3 endif
   if $P4 $Program = $Program+" "+$P4 endif
   if $P5 $Program = $Program+" "+$P5 endif
   if $P6 $Program = $Program+" "+$P6 endif
   LogAdd($Log, $LogFile, "I", $Program)
   Shell $Program
   LogAdd($Log, $LogFile, "I", " ")
   if @Error > 0 
      Display_Error(@Error)
   endif
EndFunction

;-------------------------------------------------
; Command_ERROR
;-------------------------------------------------
function Command_ERROR
;begin
   CLS
   WriteLN ("w/n",  "Команды системы")
   WriteLN ("w/n",  "1. e - encrypt file")
   WriteLN ("w+/n", "   e In_file Out_file Secret_key_path Pub_key_path From[series] To ...")
   WriteLN ("w/n",  "2. d - decrypt file")
   WriteLN ("w+/n", "   d In_file Out_file Secret_key_path Pub_key_path From")
   WriteLN ("w/n",  "3. g - get list of abonents of encrypted file.")
   WriteLN ("w+/n", "   g In_file")
   WriteLN ("w/n",  "4. s - make signature.")
   WriteLN ("w+/n", "   s In_file Out_file Secret_key_path From")
   WriteLN ("w/n",  "5. v - verify signature")
   WriteLN ("w+/n", "   v In_file Pub_key_path ")
   WriteLN ("w/n",  "6. u - delete signature")
   WriteLN ("w+/n", "   u In_file [count_to_del]")
   WriteLN ("w/n",  "7. i - init key(load in to driver)")
   WriteLN ("w+/n", "   i [Key_ID] [Key_Dev]")
   WriteLN ("w/n",  "8. r reset key(unload...)")
   WriteLN ("w+/n", "   r Key_ID")
   WriteLN ("w/n",  "9. l get keys list")
   WriteLN ("w+/n", "   l")
   WriteLN ("w/n",  "A. A crypt list")
   WriteLN ("w+/n", "   A")
   WriteLN ("w/n",  "B. B sign list")
   WriteLN ("w+/n", "   A")
   WriteLN ("w/n",  "0. Выйти из программы")
   WriteLN ("w+/n", "   q")
   WriteLN ("w+/n", "Введите команду: ")
EndFunction

;-------------------------------------------------
; Command_ERROR_encrypt_file
;-------------------------------------------------
function Command_ERROR_encrypt_file
;begin
   CLS
   WriteLN ("w+/n", "e In_file Out_file Secret_key_path Pub_key_path From[series] To1 [To2 ...]")
   WriteLN ("w/n",  "")
EndFunction

;-------------------------------------------------
; Command_encrypt_file
;-------------------------------------------------
function Command_encrypt_file
;begin
   $Done = 0
   while not $Done
      select
         case $P1 and $P2 and $P5 and $P6
            $P3 = $Secret_key_path 
            $P4 = $Pub_key_path
            $Done = 1
            RUN_Verba($APP)
         case 1
            Command_ERROR_encrypt_file
            if not $Q
               $Done = 0
               while not $Done
                  select
                     case Exist($P1) or (UCase($P1) = "Q")
                        $Done = 1
                        if (UCase($P1) = "Q") $Q = 1 endif
                     case 1
                        $P1 = ReadParam("<In_file>|Q","")
                  endselect
               loop
            endif
            if not $Q
               $Done = 0
               while not $Done
                  select
                     case ($P2 <> "") or (UCase($P2) = "Q")
                        $Done = 1
                        if (UCase($P2) = "Q") $Q = 1 endif
                     case 1
                        $P2 = ReadParam("<Out_file>|Q","")
                        if $P2 = "" $P2 = $P1 $Done = 1 endif
                  endselect
               loop
            endif
            if not $Q
               $Done = 0
               while not $Done
                  select
                     case ($P5 <> "") or (UCase($P5) = "Q")
                        $Done = 1
                        if (UCase($P5) = "Q") $Q = 1 endif
                     case 1
                        $P5 = ReadParam("<From[series]>|Q","0104")
                  endselect
               loop
            endif
            if not $Q
               $Done = 0
               while not $Done
                  select
                     case ($P6 <> "") or (UCase($P6) = "Q")
                        $Done = 1
                        if (UCase($P6) = "Q") $Q = 1 endif
                     case 1
                        $P6 = ReadParam("<To>|Q","")
                  endselect
               loop
            endif
            if not $Q
               RUN_Verba($APP)
            endif
      endselect
   loop
EndFunction

;-------------------------------------------------
; Command_ERROR_decrypt_file
;-------------------------------------------------
function Command_ERROR_decrypt_file
;begin
   CLS
   WriteLN ("w/n",  "d In_file Out_file Secret_key_path Pub_key_path From")
   WriteLN ("w/n",  "")
EndFunction

;-------------------------------------------------
; Command_decrypt_file
;-------------------------------------------------
function Command_decrypt_file
;begin
   $Done = 0
   while not $Done
      select
         case $P1 and $P2 and $P5
            $Done = 1
            RUN_Verba($APP)
         case 1
            Command_ERROR_decrypt_file
            if not $Q
               $Done = 0
               while not $Done
                  select
                     case Exist($P1) or (UCase($P1) = "Q")
                        $Done = 1
                        if (UCase($P1) = "Q") $Q = 1 endif
                     case 1
                        $P1 = ReadParam("<In_file>|Q","")
                  endselect
               loop
            endif
            if not $Q
               $Done = 0
               while not $Done
                  select
                     case ($P2 <> "") or (UCase($P2) = "Q")
                        $Done = 1
                        if (UCase($P2) = "Q") $Q = 1 endif
                     case 1
                        $P2 = ReadParam("<Out_file>|Q","")
                        if $P2 = "" $P2 = $P1 $Done = 1 endif
                  endselect
               loop
            endif
            $P3 = $Secret_key_path 
            $P4 = $Pub_key_path
            if not $Q
               $Done = 0
               while not $Done
                  select
                     case ($P5 <> "") or (UCase($P5) = "Q")
                        $Done = 1
                        if (UCase($P5) = "Q") $Q = 1 endif
                     case 1
                        $P5 = ReadParam("<From>|Q","0104")
                  endselect
               loop
            endif
            if not $Q
               RUN_Verba($APP)
            endif
      endselect
   loop
EndFunction

;-------------------------------------------------
; Command_ERROR_get_list_abonents
;-------------------------------------------------
function Command_ERROR_get_list_abonents
;begin
   CLS
   WriteLN ("w/n",  "g In_file")
   WriteLN ("w/n",  "")
EndFunction

;-------------------------------------------------
; Command_get_list_abonents
;-------------------------------------------------
function Command_get_list_abonents
;begin
   $Done = 0
   while not $Done
      select
         case $P1
            $Done = 1
            RUN_Verba($APP)
         case 1
            Command_ERROR_list_abonents
            if not $Q
               $Done = 0
               while not $Done
                  select
                     case Exist($P1) or (UCase($P1) = "Q")
                        $Done = 1
                        if (UCase($P1) = "Q") $Q = 1 endif
                     case 1
                        $P1 = ReadParam("<In_file>|Q","")
                  endselect
               loop
            endif
            if not $Q
               RUN_Verba($APP)
            endif
      endselect
   loop
EndFunction

;-------------------------------------------------
; Command_ERROR_make_signature
;-------------------------------------------------
function Command_ERROR_make_signature
;begin
   CLS
   WriteLN ("w/n",  "s In_file Out_file Secret_key_path From")
   WriteLN ("w/n",  "")
EndFunction

;-------------------------------------------------
; Command_make_signature
;-------------------------------------------------
function Command_make_signature
;begin
   $Done = 0
   while not $Done
      select
         case $P1 and $P2 and $P5
            $Done = 1
            RUN_Verba($APP)
         case 1
            Command_ERROR_make_signature
            if not $Q
               $Done = 0
               while not $Done
                  select
                     case Exist($P1) or (UCase($P1) = "Q")
                        $Done = 1
                        if (UCase($P1) = "Q") $Q = 1 endif
                     case 1
                        $P1 = ReadParam("<In_file>|Q","")
                  endselect
               loop
            endif
            if not $Q
               $Done = 0
               while not $Done
                  select
                     case ($P2 <> "") or (UCase($P2) = "Q")
                        $Done = 1
                        if (UCase($P2) = "Q") $Q = 1 endif
                     case 1
                        $P2 = ReadParam("<Out_file>|Q","")
                        if $P2 = "" $P2 = $P1 $Done = 1 endif
                  endselect
               loop
            endif
            $P3 = $Secret_key_path 
            if not $Q
               $Done = 0
               while not $Done
                  select
                     case ($P5 <> "") or (UCase($P5) = "Q")
                        $Done = 1
                        if (UCase($P5) = "Q") $Q = 1 endif
                     case 1
                        $P5 = ReadParam("<From>|Q","0104")
                  endselect
               loop
            endif
            if not $Q
               RUN_Verba($APP)
            endif
      endselect
   loop
EndFunction

;-------------------------------------------------
; Command_ERROR_verify_signature
;-------------------------------------------------
function Command_ERROR_verify_signature
;begin
   CLS
   WriteLN ("w/n",  "v In_file Pub_key_path")
   WriteLN ("w/n",  "")
EndFunction

;-------------------------------------------------
; Command_verify_signature
;-------------------------------------------------
function Command_verify_signature
;begin
   $Done = 0
   while not $Done
      select
         case $P1
            $Done = 1
            RUN_Verba($APP)
         case 1
            Command_ERROR_make_signature
            if not $Q
               $Done = 0
               while not $Done
                  select
                     case Exist($P1) or (UCase($P1) = "Q")
                        $Done = 1
                        if (UCase($P1) = "Q") $Q = 1 endif
                     case 1
                        $P1 = ReadParam("<In_file>|Q","")
                  endselect
               loop
            endif
            $P4 = $Pub_key_path
            if not $Q
               RUN_Verba($APP)
            endif
      endselect
   loop
EndFunction

;-------------------------------------------------
; Command_ERROR_delete_signature
;-------------------------------------------------
function Command_ERROR_delete_signature
;begin
   CLS
   WriteLN ("w/n",  "u In_file [count_to_del]")
   WriteLN ("w/n",  "")
EndFunction

;-------------------------------------------------
; Command_delete_signature
;-------------------------------------------------
function Command_delete_signature
;begin
   $Done = 0
   while not $Done
      select
         case $P1 and $P2
            $Done = 1
            RUN_Verba($APP)
         case 1
            Command_ERROR_make_signature
            if not $Q
               $Done = 0
               while not $Done
                  select
                     case Exist($P1) or (UCase($P1) = "Q")
                        $Done = 1
                        if (UCase($P1) = "Q") $Q = 1 endif
                     case 1
                        $P1 = ReadParam("<In_file>|Q","")
                  endselect
               loop
            endif
            if not $Q
               $P2 = ReadParam("[count_to_del]|Q","")
               $Done = 1
               if (UCase($P2) = "Q") $Q = 1 endif
            endif
            if not $Q
               RUN_Verba($APP)
            endif
      endselect
   loop
EndFunction

;-------------------------------------------------
; Command_ERROR_init_key
;-------------------------------------------------
function Command_ERROR_init_key
;begin
   CLS
   WriteLN ("w/n",  "i [Key_ID] [Key_Dev]")
   WriteLN ("w/n",  "")
EndFunction

;-------------------------------------------------
; Command_init_key
;-------------------------------------------------
function Command_init_key
;begin
   $Done = 0
   $Q = 0
   while not $Done
      select
         case $P1 and $P2
            $Done = 1
            RUN_Verba($APP)
         case 1
            Command_ERROR_init_key
            if not $Q
               $P1 = ReadParam("[Key_ID]|Q","")
               $Done = 1
               if (UCase($P1) = "Q") $Q = 1 endif
            endif
            if not $Q
               $P2 = ReadParam("[Key_Dev]|Q","")
               $Done = 1
               if (UCase($P2) = "Q") $Q = 1 endif
            endif
            if not $Q
               RUN_Verba($APP)
            endif
      endselect
   loop
EndFunction

;-------------------------------------------------
; Command_ERROR_reset_key
;-------------------------------------------------
function Command_ERROR_reset_key
;begin
   CLS
   WriteLN ("w/n",  "r Key_ID")
   WriteLN ("w/n",  "")
EndFunction

;-------------------------------------------------
; Command_reset_key
;-------------------------------------------------
function Command_reset_key
;begin
   $Done = 0
   while not $Done
      select
         case $P1 
            $Done = 1
            RUN_Verba($APP)
         case 1
            Command_ERROR_reset_key
            if not $Q
               $P1 = ReadParam("Key_ID|Q","")
               $Done = 1
               if (UCase($P1) = "Q") $Q = 1 endif
            endif
      endselect
   loop
EndFunction

;-------------------------------------------------
; Command_ERROR_get_keys_list
;-------------------------------------------------
function Command_ERROR_get_keys_list
;begin
   CLS
   WriteLN ("w/n",  "l")
   WriteLN ("w/n",  "")
EndFunction

;-------------------------------------------------
; Command_get_keys_list
;-------------------------------------------------
function Command_get_keys_list
;begin
   Command_ERROR_get_keys_list
   $Done = 1
   RUN_Verba($APP)
EndFunction


;-------------------------------------------------
; Command_ERROR_crypt_list
;-------------------------------------------------
function Command_ERROR_crypt_list
;begin
   CLS
   WriteLN ("w/n",  "l")
   WriteLN ("w/n",  "")
EndFunction
;-------------------------------------------------
; Command_crypt_list
;-------------------------------------------------
function Command_crypt_list
;begin
   Command_ERROR_crypt_list
   $Command = "s"
   $P1 = "c:\keys\verba"
   $P2 = "940073"
   $Done = 1
   RUN_Verba($APP2)
EndFunction

;-------------------------------------------------
; Command_ERROR_sign_list
;-------------------------------------------------
function Command_ERROR_sign_list
;begin
   CLS
   WriteLN ("w/n",  "l")
   WriteLN ("w/n",  "")
EndFunction
;-------------------------------------------------
; Command_sign_list
;-------------------------------------------------
function Command_sign_list
;begin
   Command_ERROR_sign_list
   $Command = "e"
   $P1 = "c:\keys\verba"
   $P2 = "940073"
   $Done = 1
   RUN_Verba($APP2)
EndFunction

;-------------------------------------------------
; Verba
;-------------------------------------------------
function Verba
;begin
   $Done = 0
   while not $Done
      select
         case UCase($Command) = "E"
            Command_encrypt_file
         case UCase($Command) = "D"
            Command_decrypt_file
         case UCase($Command) = "G"
            Command_get_list_abonents
         case UCase($Command) = "S"
            Command_make_signature
         case UCase($Command) = "V"
            Command_verify_signature
         case UCase($Command) = "U"
            Command_delete_signature
         case UCase($Command) = "I"
            Command_init_key
         case UCase($Command) = "R"
            Command_reset_key
         case UCase($Command) = "L"
            Command_get_keys_list
         case UCase($Command) = "A"
            Command_crypt_list
         case UCase($Command) = "B"
            Command_sign_list
         case UCase($Command) = "Q"
            $Done = 1
         case 1
            Command_ERROR
            Gets $Command
      endselect                                                                                                                        
   loop
EndFunction
