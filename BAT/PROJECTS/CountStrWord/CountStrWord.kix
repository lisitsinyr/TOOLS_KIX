;=======================================================================================
; CountStrWord
;=======================================================================================
   BREAK ON

;=======================================================================================
; Uses
;=======================================================================================
   if not $KxlDir Call "\\S73FS01\APPInfo\Tools\KxlDir.kxl" endif
   Call $KxlDir+"\UDF\LUFile.kxl"
   Call $KxlDir+"\UDF\LUSupport.kxl"
   Call $KxlDir+"\UDF\LUStrings.kxl"
   Call $KxlDir+"\UDF\LUWord.kxl"

;-------------------------------------------------------------------------------
; CScanFile ($ASourcePath, $AMask)
;-------------------------------------------------------------------------------
function CScanFile ($ASourcePath, $AMask)
   Dim $LResult
;begin
   $LFile = Dir ($ASourcePath+"\"+$AMask)
   WHILE @ERROR = 0 AND $LFile
      IF $LFile <> "." AND $LFile <> ".."
         IF (GetFileAttr ($ASourcePath + "\" + $LFile) & 16)=0
            $LFileNameSource = $ASourcePath + "\" + $LFile

            $LFileSizeSource = GetFileSize ($LFileNameSource)
            $LFileTimeSource = GetFileTime ($LFileNameSource)

            $FileExt = GetFileExt($LFileNameSource)
            ;LogAdd ($Log, $LogFile, "P", $LFileNameSource+" "+$FileExt)

            select
               case UCase($FileExt) = "DOC" 
                  $i = 0
                  $objWord = CreateWord
                  $objWordFile = $objWord.documents.open($LFileNameSource)

                  $i = $objWord.ActiveDocument.Paragraphs.Count
                  $i = $objWord.ActiveDocument.BuiltinDocumentProperties(23).Value

                  $ii = $objWord.ActiveDocument.Count
                  $iI = $objWord.ActiveDocument.Paragraphs.Count

                  $objWord.quit(0)
                  $j = $j + $i
                  ;LogAdd ($Log, $LogFile, "P", "  "+AddCharR(" ", GetFileName($LFileNameSource), 40)+" "+AddChar(" ", $i,8)+" "+AddChar(" ", $ii,8)+" "+UCase($FileExt))
                  LogAdd ($Log, $LogFile, "P", "  "+AddCharR(" ", GetFileName($LFileNameSource), 40)+" "+AddChar(" ", $i,8)+" "+UCase($FileExt))
               case UCase($FileExt) = "TXT" or UCase($FileExt) = "PAS" or UCase($FileExt) = "PRG"
                  ;----------------------------------------------------------------------
                  ;
                  ;----------------------------------------------------------------------
                  $i = 0
                  $Handle = FreeFileHandle()
                  if $Handle > 0
                     if Open ($Handle, $LFileNameSource) = 0
                        $s = ReadLine($Handle)
                        while @Error = 0
                           $i = $i + 1
                           $s = ReadLine($Handle)
                        loop
                        $Res = Close ($Handle)
                        $j = $j + $i
                        LogAdd ($Log, $LogFile, "P", AddCharR(" ", GetFileName($LFileNameSource), 40)+" "+AddChar(" ", $i,8)+" "+UCase($FileExt))
                     endif
                  endif 
               case 1
            endselect
         endif
      endif
      if @ERROR = 0
         $LFile = Dir("")
      endif
   loop
EndFunction

;-------------------------------------------------------------------------------
; ScanDir ($ASourcePath, $AMask)
;-------------------------------------------------------------------------------
function CScanDir ($ASourcePath, $AMask)
;begin
   $LFile = Dir ($ASourcePath+"\*.*")
   LogAdd ($Log, $LogFile, "P", $ASourcePath)
   WHILE @ERROR = 0 AND $LFile
      IF $LFile <> "." AND $LFile <> ".."
         IF GetFileAttr ($ASourcePath + "\" + $LFile) & 16    ; is it a directory ?
            $LSourcePath = $ASourcePath + "\" + $LFile
            CScanFile($LSourcePath, $AMask)
            CScanDir($LSourcePath, $AMask)
         endif
      endif
      if @ERROR = 0
         $LFile = Dir("")
      endif
   loop
EndFunction

;-------------------------------------------------------------------------------
;  Scan ($ASourcePath, $AMask)
;-------------------------------------------------------------------------------
function Scan ($ASourcePath, $AMask)
;begin
   if $ASourcePath
      $LSourcePath = $ASourcePath
   else
      $LSourcePath = @CurDir
   endif
   if $AMask
      $LMask = $AMask
   else
      $LMask = "*.*"
   endif
   $j = 0
   CScanFile ($LSourcePath, $LMask)
   CScanDir  ($LSourcePath, $LMask)
   LogAdd ($Log, $LogFile, "P", AddCharR(" ", "Итого", 40)+" "+AddChar(" ", $j,8))
EndFunction

;main
   ;=======================================================================================
   $Log = 30 
   $LogDir = %TEMP%
   $LogFile = "scan.log"
   $LogFile = LogFileName($Log,$LogDir,$LogFile)

   if $D
      $SourcePath = $D
   else
      $SourcePath = @Curdir
   endif
   if $M
      $Mask = $M
   else
      $Mask = "*.*"
   endif
   LogAdd ($Log, $LogFile, "P", $SourcePath+"="+$Mask)

   ;$objWord = CreateWord

   Scan ($SourcePath, $Mask)

   ;$objWord.quit(0)

;end
